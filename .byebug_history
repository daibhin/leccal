exit
assignment_counts
exit
course
exit
lecturer_id
lecturer
exit
lecturer_id
exit
::Calendar::CalendarEvents::Get.run!(params)
exit
Calendar::CalendarEvents::Get.run!(params)
::Calendar::CalendarEvents::Get.run!(params)
exit
sd
exit
object[1]
exit
EXIT
object[0]
object.id
object
exit
serialization_options
object.id
@options
options
exit
id
object.course_id
object.id
object
@params
params
@model
@context
@options
options
context
model
exit
new_hashes
exit
new_hashes
exit
new_hashes
exit
new_hashes
exit
sd
exit
AssignmentSerializer.new(assignment[0], {}).as_json
exit
new_hashes
exit
AssignmentSerializer.new(a, {}).as_json
AssignmentSerializer.new(a, {}).to_json
AssignmentSerializer.new(a, {})
AssignmentSerializer
::ActiveModelSerializers::SerializableResource.new(resource, options)
ActiveModelSerializers::SerializableResource.new(resource, options)
a.active_model_serializer.new(a, {}).to_json
a.active_model_serializer.new(a, {})
a.active_model_serializer
a.serialize
a.to_json
a = assignment_counts.first[0]
assignment_counts.first[0]
assignment_counts.first
assignment_counts
assignment_counts.first
exit
assignment_counts[assignment]
assignment
exit
assignment_counts
exit
course.upcoming_assignments
course
exit
student.courses.count
student.courses.each do |course|
exit
student.enrollments
student.courses
exit
course.students.first
course
course.students.count
course.students
course
exit
params["lecturer_id"]
params
exit
lecturer
request.format.json?
exit
repsonse
options
token
exit
authenticate_with_http_token
exit
@context
model
context
assignments
name
id
model
@model
